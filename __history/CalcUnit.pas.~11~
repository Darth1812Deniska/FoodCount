unit CalcUnit;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Samples.Spin,
  Vcl.Buttons, Vcl.ExtCtrls, Data.DB, Data.Win.ADODB, Vcl.Samples.Gauges;

type
  ProductInfo = record
  ID: Integer;
  Name: string;
  Cals: Real;
  Prots: Real;
  Carbons: Real;
  Fats:Real;
end;

type
  UserInfo = record
    ID: Integer;
    Name: string;
    CalsMin: Real;
    CalsMax: Real;
    Prots: Real;
    Carbons: Real;
    Fats: Real;
  end;

type
  ProdInfoArr =  array of ProductInfo;

type
  UserInfoArray = array of UserInfo;

type
  TCalculateForm = class(TForm)
    lblCarbon: TLabel;
    lblProteins: TLabel;
    lblFats: TLabel;
    lstCarbons: TListBox;
    lstProteins: TListBox;
    lstFats: TListBox;
    btnAddProt: TSpeedButton;
    btnAddCarbons: TSpeedButton;
    btnAddFats: TSpeedButton;
    lblDayMenu: TLabel;
    lstDayMenu: TListBox;
    grpDayMenu: TGroupBox;
    seGramms: TSpinEdit;
    lblGramms: TLabel;
    lblPg: TLabel;
    seProts: TSpinEdit;
    lblCarbons: TLabel;
    seCarbons: TSpinEdit;
    lblFG: TLabel;
    seFats: TSpinEdit;
    grpGraphs: TGroupBox;
    gCals: TGauge;
    lblCarbGr: TLabel;
    lblProtGr: TLabel;
    gProt: TGauge;
    lblFatGr: TLabel;
    gFats: TGauge;
    lblCals: TLabel;
    gCarbons: TGauge;
    conMSSQL: TADOConnection;
    qryMSSQL: TADOQuery;
    pbCarbons: TPaintBox;
    pbProteins: TPaintBox;
    pbFats: TPaintBox;
    pbCals: TPaintBox;
    grpUser: TGroupBox;
    cbbUsers: TComboBox;
    lblUsers: TLabel;
    lblUserCal: TLabel;
    lblUserCarbons: TLabel;
    lblUserProteins: TLabel;
    lblUserFats: TLabel;
    edtUserCals: TEdit;
    edtUserProteins: TEdit;
    edtUserCarbons: TEdit;
    edtUserFats: TEdit;
    procedure FormCreate(Sender: TObject);
    procedure cbbUsersChange(Sender: TObject);
  private
    procedure AddCarbonProducts;
    procedure AddProteinProducts;
    procedure AddFatProducts;
    procedure AddProduct(SQLText: string; ProductList: TListBox;
      ProductArray: ProdInfoArr);
    procedure AddUserInfo;
  public
    CarbonsProductArray: ProdInfoArr;
    ProtsProductArray: ProdInfoArr;
    FatsProductArray: ProdInfoArr;
    UsersInfo: UserInfoArray;
    SelectedUserID: Integer;
    SelectedMinCals: Real;
    SelectedMaxCals: Real;
    SelectedUserProts:Real;
    SelectedUserCarbons: Real;
    SelectedUserFats: Real;
end;

var
  CalculateForm: TCalculateForm;


implementation

{$R *.dfm}

procedure TCalculateForm.FormCreate(Sender: TObject);
begin
  SetLength(CarbonsProductArray, 0);
  SetLength(ProtsProductArray, 0);
  SetLength(FatsProductArray, 0);
  SetLength(UsersInfo, 0);
  AddCarbonProducts;
  AddProteinProducts;
  AddFatProducts;
  AddUserInfo;
end;

procedure TCalculateForm.AddCarbonProducts;
var
  SQLText: string;
begin
  SQLText:= 'EXEC sprc_SelectMaxCarbons';
  AddProduct( SQLText, lstCarbons, CarbonsProductArray );
end;

procedure TCalculateForm.AddProteinProducts;
var
  SQLText:string;
begin
  SQLText:= 'EXEC sprc_SelectMaxProteins';
  AddProduct( SQLText, lstProteins, ProtsProductArray );
end;

procedure TCalculateForm.AddFatProducts;
var
  SQLText:string;
begin
  SQLText:= 'EXEC sprc_SelectMaxFats';
  AddProduct( SQLText, lstFats, FatsProductArray );
end;

procedure TCalculateForm.AddProduct(SQLText: string;
  ProductList: TListBox;
  ProductArray: ProdInfoArr);
var
  ArrLength: Integer;
begin
  qryMSSQL.SQL.Text:=SQLText;
  qryMSSQL.Open;
  qryMSSQL.First;
  while not qryMSSQL.Eof do
  begin
    ArrLength:= Length(ProductArray);
    Inc(ArrLength);
    SetLength(ProductArray, ArrLength);
    ProductArray[ArrLength-1].ID:= qryMSSQL.FieldByName('ID').AsInteger;
    ProductArray[ArrLength-1].Name:= qryMSSQL.FieldByName('Name').AsString;
    ProductArray[ArrLength-1].Cals:= qryMSSQL.FieldByName('Cals').AsFloat;
    ProductArray[ArrLength-1].Prots:= qryMSSQL.FieldByName('Prots').AsFloat;
    ProductArray[ArrLength-1].Carbons:= qryMSSQL.FieldByName('Carbons').AsFloat;
    ProductArray[ArrLength-1].Fats:= qryMSSQL.FieldByName('Fats').AsFloat;
    ProductList.Items.Add(ProductArray[ArrLength-1].Name);
    qryMSSQL.Next;
  end;
  qryMSSQL.Close;
end;

procedure  TCalculateForm.AddUserInfo;
var
  SQLText: string;
  ArrayLength: Integer;
begin
  SQLText:='SELECT ui.ID, '+
	   'ui.Name, '+
	   'ui.Proteins, '+
	   'ui.Carbohydrates, '+
	   'ui.Fats, '+
	   'ui.CalWLossMin, '+
	   'ui.CalWLossMax '+
  'FROM UserInfo AS ui';
  qryMSSQL.SQL.Text:= SQLText;
  qryMSSQL.Open;
  qryMSSQL.First;
  while not qryMSSQL.Eof do
  begin
    ArrayLength:= Length(UsersInfo);
    Inc(ArrayLength);
    SetLength(UsersInfo, ArrayLength);
    UsersInfo[ArrayLength-1].ID:= qryMSSQL.FieldByName('ID').AsInteger;
    UsersInfo[ArrayLength-1].Name:= qryMSSQL.FieldByName('Name').AsString;
    UsersInfo[ArrayLength-1].CalsMin:= qryMSSQL.FieldByName('CalWLossMin').AsFloat;
    UsersInfo[ArrayLength-1].CalsMax:= qryMSSQL.FieldByName('CalWLossMax').AsFloat;
    UsersInfo[ArrayLength-1].Prots:= qryMSSQL.FieldByName('Proteins').AsFloat;
    UsersInfo[ArrayLength-1].Carbons:= qryMSSQL.FieldByName('Carbohydrates').AsFloat;
    UsersInfo[ArrayLength-1].Fats:= qryMSSQL.FieldByName('Fats').AsFloat;
    cbbUsers.Items.Add(UsersInfo[ArrayLength-1].Name);
    qryMSSQL.Next;
  end;
  qryMSSQL.Close;
  if cbbUsers.Items.Count>0 then
    cbbUsers.ItemIndex:=0;
end;

procedure TCalculateForm.cbbUsersChange(Sender: TObject);
begin
  SelectedUserID:= UsersInfo[cbbUsers.ItemIndex].ID;
  SelectedMinCals:= UsersInfo[cbbUsers.ItemIndex].CalsMin;
  SelectedMaxCals:= UsersInfo[cbbUsers.ItemIndex].CalsMax;
  edtUserCals.Text:= FloatToStr( UsersInfo[cbbUsers.ItemIndex].CalsMax );
  SelectedUserProts:= UsersInfo[cbbUsers.ItemIndex].Prots;
  edtUserProteins.Text:= FloatToStr( UsersInfo[cbbUsers.ItemIndex].Prots );
  SelectedUserCarbons:= UsersInfo[cbbUsers.ItemIndex].Carbons;
  edtUserCarbons.Text:= FloatToStr( UsersInfo[cbbUsers.ItemIndex].Carbons );
  SelectedUserFats:= UsersInfo[cbbUsers.ItemIndex].Fats;
  edtUserFats.Text:= FloatToStr( UsersInfo[cbbUsers.ItemIndex].Fats );
end;

end.
